cmake_minimum_required(VERSION 3.11.4)
project(armv4vm VERSION 1.0.1)

set(CMAKE_VERBOSE_MAKEFILE ON)

FIND_PACKAGE(Qt5 COMPONENTS Core Test)

ADD_DEFINITIONS(-Wall)
#ADD_DEFINITIONS(-pedantic)
ADD_DEFINITIONS(-fPIC)
ADD_DEFINITIONS(-DDEBUG)
ADD_DEFINITIONS(-DTUNIT)
#set(CMAKE_CXX_STANDARD 14)

SET(CMAKE_INCLUDE_CURRENT_DIR ON)

SET(ARMV4VM_HEADER_FILES vm.h)
SET(ARMV4VM_SOURCE_FILES vm.cpp)
SET(ARMV4VM_TEST_SOURCE_FILES test.cpp)

#IF({Qt5Core_COMPILE_DEFINITIONS})
    SET(CMAKE_AUTOMOC ON)
    INCLUDE_DIRECTORIES(SYSTEM ${QT_USE_FILE})
    ADD_DEFINITIONS(-D${Qt5Core_COMPILE_DEFINITIONS})
    ADD_LIBRARY(armv4vm STATIC ${ARMV4VM_SOURCE_FILES} ${ARMV4VM_HEADER_FILES})
    TARGET_LINK_LIBRARIES(armv4vm Qt5::Core)
#ELSE({Qt5Core_COMPILE_DEFINITIONS})
    #ADD_LIBRARY(armv4vm STATIC ${ARMV4VM_SOURCE_FILES} ${ARMV4VM_HEADER_FILES})
#ENDIF({Qt5Core_COMPILE_DEFINITIONS})

#IF(${QT_FOUND})
    add_executable(tu ${ARMV4VM_TEST_SOURCE_FILES})
    add_test(tu ${ARMV4VM_TEST_SOURCE_FILES})
    target_link_libraries(tu Qt5::Core Qt5::Test armv4vm)
#ENDIF(${QT_FOUND})
